# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- script: pwd
  displayName: 'Run a one-line script'

- script: |
    pwd
    ls -l
  displayName: 'Run a multi-line script'

- task: DockerCompose@1
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureContainerRegistry: '{"loginServer":"vgang25.azurecr.io", "id" : "/subscriptions/19e84806-c56f-43e8-b9ea-eb00633a204c/resourceGroups/vg-kube/providers/Microsoft.ContainerRegistry/registries/vgang25"}'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: 'DOCKER_REGISTRY=vgang25.azurecr.io/'
    projectName: 'shopping'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'build'
  name: 'buildimages'
  displayName: 'Build docker images'

- script: docker images
  displayName: 'Display images list'

- task: DockerCompose@1
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureSubscription: 'Personal(1)(19e84806-c56f-43e8-b9ea-eb00633a204c)'
    azureContainerRegistry: '{"loginServer":"vgang25.azurecr.io", "id" : "/subscriptions/19e84806-c56f-43e8-b9ea-eb00633a204c/resourceGroups/vg-kube/providers/Microsoft.ContainerRegistry/registries/vgang25"}'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: 'DOCKER_REGISTRY=vgang25.azurecr.io/'
    projectName: 'shopping'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'push'
  name: 'pushimages'
  displayName: 'Push images to registry'


apiVersion: v1
kind: Namespace
metadata:
  name: shopping

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: catalogdb-postgres-pv
  namespace: shopping
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/Users/macavenger/data/catalogdb"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: catalogdb-postgres-pvc
  namespace: shopping
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogdb
  namespace: shopping
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalogdb
  template:
    metadata:
      labels:
        app: catalogdb
    spec:
      containers:
      - name: catalogdb
        image: postgres
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "CatalogDb"
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: postgres-catalog-volume
      volumes:
      - name: postgres-catalog-volume
        persistentVolumeClaim:
          claimName: catalogdb-postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: catalogdb
  namespace: shopping
spec:
  type: NodePort
  selector:
    app: catalogdb
  ports:
    - name: db
      protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-api
  namespace: shopping
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog-api
  template:
    metadata:
      labels:
        app: catalog-api
    spec:
      containers:
      - name: catalog-api
        image: catalogapi:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"
        - name: ASPNETCORE_HTTP_PORTS
          value: "8080"
        - name: ConnectionStrings__Database
          value: "Server=$(CATALOGDB_SERVICE_HOST);Port=$(CATALOGDB_SERVICE_PORT);Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true"
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /home/app/.microsoft/usersecrets
          name: user-secrets
        - mountPath: /home/app/.aspnet/https
          name: aspnet-https
      volumes:
      - name: user-secrets
        emptyDir: {}
      - name: aspnet-https
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: catalog-api
  namespace: shopping
spec:
  type: LoadBalancer
  selector:
    app: catalog-api
  ports:
    - name: http
      protocol: TCP
      port: 6000
      targetPort: 8080
